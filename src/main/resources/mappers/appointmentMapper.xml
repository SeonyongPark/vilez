<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.vilez.appointment.model.mapper.AppointmentMapper">
    <resultMap id="appointment" type="appointmentDto">
        <result column="appointment_id" property="appointmentId"/>
        <result column="board_id" property="boardId"/>
        <result column="title" property="title"/>
        <result column="share_user_id" property="shareUserId"/>
        <result column="not_share_user_id" property="notShareUserId"/>
        <result column="appointment_start" property="appointmentStart"/>
        <result column="appointment_end" property="appointmentEnd"/>
        <result column="type" property="type"/>
    </resultMap>

    <resultMap id="room" type="roomDto">
        <result column="id" property="id"/>
        <result column="board_id" property="boardId"/>
        <result column="type" property="type"/>
        <result column="share_user_id" property="shareUserId"/>
        <result column="not_share_user_id" property="notShareUserId"/>
        <result column="type" property="type"/>
    </resultMap>

    <resultMap id="mylist" type="MyAppointListDto">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="hope_area_lat" property="hopeAreaLat"/>
        <result column="hope_area_lng" property="hopeAreaLng"/>
        <result column="start_day" property="startDay"/>
        <result column="end_day" property="endDay"/>
        <result column="appointment_id" property="appointmentId"/>
        <result column="share_user_id" property="shareUserId"/>
        <result column="not_share_user_id" property="notShareUserId"/>
    </resultMap>
    <select id="getAppointmentDate" parameterType="appointmentDto" resultMap="appointment">
        select *
        from appointment
        where board_id = #{boardId}
        and share_user_id = #{shareUserId}
        and not_share_user_id = #{notShareUserId}
        and state >= 0;
    </select>
    <update id="cancelAppointment" parameterType="appointmentDto">
        update appointment
        set state = -2
        where board_id = #{boardId} and share_user_id = #{shareUserId}
          and not_share_user_id = #{notShareUserId} and state >= 0 and type = #{type};
    </update>

    <update id="changePoint" parameterType="kr.co.vilez.appointment.model.vo.PointVO" >
        update user
        set point = point + #{point}
        where id = #{userId};
    </update>

    <select id="getMyAppointmentCalendarListShare" parameterType="int" resultMap="appointment">
        select s.id, s.title, a.appointment_start, a.appointment_end,
               (
                   case
                       when share_user_id = #{userId} THEN 1
                       else 0
                    end
                   ) as state
        from appointment as a
        left join sharing_board as s
        on a.board_id = s.id
        where not_share_user_id = #{userId} or share_user_id = #{userId};
    </select>

    <select id="getMyAppointmentCalendarListAsk" parameterType="int" resultMap="appointment">
        select s.id, s.title, a.appointment_start, a.appointment_end,
                (
                    case
                        when share_user_id = #{userId} THEN 1
                        else 0
                    end
                ) as state
        from appointment as a
        left join ask_board as s
        on a.board_id = s.id
        where not_share_user_id = #{userId} or share_user_id = #{userId};
    </select>

    <select id="getBoardState" parameterType="int" resultType="kr.co.vilez.appointment.model.vo.BoardStateVO">
        SELECT board_id as boardId
        FROM appointment
        WHERE now() >= appointment_start and appointment_end >= now() and board_id = #{boardId} and type = #{type};
    </select>

    <select id="getGiveListShare" parameterType="int" resultMap="mylist">
        select
            id, user_id,
            title , hope_area_lat,
            hope_area_lng, start_day,
            end_day, appointment_id,
            share_user_id, not_share_user_id
        from sharing_view as s
                 right join(
            select *
            from appointment
            where share_user_id = #{userId}
        ) as a
        on a.board_id = s.id
        where a.state >= 0 and type = 2;
    </select>
    <select id="getGiveListAsk" parameterType="int" resultMap="mylist">
        select
            id, user_id,
            title , hope_area_lat,
            hope_area_lng, start_day,
            end_day, appointment_id,
            share_user_id, not_share_user_id
        from ask_view as s
                 right join(
            select *
            from appointment
            where share_user_id = #{userId}
        ) as a
        on a.board_id = s.id
        where a.state >= 0 and type = 1;
    </select>

    <select id="getMyAppointmentListShare" parameterType="int" resultMap="mylist">
        select
            id, user_id,
            title , hope_area_lat,
            hope_area_lng, start_day,
            end_day, appointment_id,
            share_user_id, not_share_user_id
        from sharing_view as s
        right join(
            select *
            from appointment
            where not_share_user_id = #{userId}
        ) as a
        on a.board_id = s.id
        where a.state >= 0 and type = 2;
    </select>
    <select id="getMyAppointmentListAsk" parameterType="int" resultMap="mylist">
        select
            id, user_id,
            title , hope_area_lat,
            hope_area_lng, start_day,
            end_day, appointment_id,
            share_user_id, not_share_user_id
        from sharing_view as s
        right join(
            select *
            from appointment
            where not_share_user_id = #{userId}
        ) as a
        on a.board_id = s.id
        where a.state >= 0 and type = 1;
    </select>

    <select id="getAppointmentList" parameterType="int" resultMap="appointment">
        SELECT appointment_id, board_id, share_user_id, not_share_user_id, appointment_start, appointment_end
        FROM appointment
        WHERE board_id = #{boardId} and type = #{type};
    </select>

    <insert id="create" parameterType="appointmentDto">
        INSERT INTO appointment(board_id, share_user_id, not_share_user_id,
                                appointment_start, appointment_end, type)
        VALUES (#{boardId}, #{shareUserId}, #{notShareUserId}, #{appointmentStart}, #{appointmentEnd}, #{type});
    </insert>

    <select id="getRoomListByUserId" parameterType="int" resultMap="room">
        SELECT * FROM room where share_user_id = #{shareUserId} or not_share_user_id = #{notShareUserId};
    </select>

    <insert id="createRoom" parameterType="roomDto">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into room (type,board_id,share_user_id,not_share_user_id)
        values (#{type},#{boardId}, #{shareUserId},#{notShareUserId});
    </insert>

    <select id="getBoard" parameterType="int" resultMap="room">
        select * from room where id = #{roomId}
    </select>

    <update id="deleteRoom" parameterType="int">
        update room
        set state = -1
        where id = #{roomId}
    </update>

    <select id="checkRoom" parameterType="int" resultMap="room">
        SELECT r.*
        from
            (select * from room where share_user_id = #{userId} or not_share_user_id = #{userId}) r
        where board_id = #{boardId} and type = #{type}
    </select>

    <select id="checkRoom2" parameterType="int" resultMap="room">
        SELECT r.*
        from room
        where board_id = #{boardId} and type = #{type}
            and share_user_id = #{shareUserId} and not_share_user_id = #{notShareUserId}
            and state = 0
    </select>
</mapper>