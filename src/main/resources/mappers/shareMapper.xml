<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.vilez.share.model.mapper.ShareMapper">
    <resultMap type="shareDto" id="share">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="category" property="category"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="date" property="date"/>
        <result column="hope_area_lat" property="hopeAreaLat"/>
        <result column="hope_area_lng" property="hopeAreaLng"/>
        <result column="start_day" property="startDay"/>
        <result column="end_day" property="endDay"/>
        <result column="state" property="state"/>
        <result column="address" property="address"/>
    </resultMap>

    <resultMap type="shareListDto" id="sharelist">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="category" property="category"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="date" property="date"/>
        <result column="hope_area_lat" property="hopeAreaLat"/>
        <result column="hope_area_lng" property="hopeAreaLng"/>
        <result column="start_day" property="startDay"/>
        <result column="end_day" property="endDay"/>
        <result column="state" property="state"/>
        <result column="path" property="path"/>
        <result column="address" property="address"/>
    </resultMap>

    <resultMap id="path" type="imgPath">
        <result column="board_id" property="boardId"/>
        <result column="path" property="path"/>
    </resultMap>
    <select id="getBestList" parameterType="pageNavigator" resultMap="sharelist">
        select id, user_id, category, title, content, date, hope_area_lat, hope_area_lng, start_day, end_day, nickname, manner,
            (
            CASE
            WHEN now() >= a.appointment_start and a.appointment_end >= now() then 1
            else 0
            END
            ) as state
        from sharing_view as s
            left join
            (
            select
            ANY_VALUE(appointment_id) as  appointment_id,
            ANY_VALUE(board_id) as  board_id,
            ANY_VALUE(share_user_id) as  share_user_id,
            ANY_VALUE(not_share_user_id) as  not_share_user_id,
            ANY_VALUE(appointment_start) as  appointment_start,
            ANY_VALUE(appointment_end) as  appointment_end,
            ANY_VALUE(state) as  state
            from appointment
            WHERE now() >= appointment_start and appointment_end >= now()
            group by board_id
            )
            as a
        on s.id = a.board_id
        <where>
            OR (CAST(hope_area_lat as Double) >= (#{areaLat} - 0.03) and (#{areaLat} + 0.03) >= CAST(hope_area_lat as Double))
            and (CAST(hope_area_lng as Double) >= (#{areaLng} - 0.03) and (#{areaLng} + 0.03) >= CAST(hope_area_lng as Double))

            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
        </where>
    </select>

    <select id="loadShareList" parameterType="pageNavigator" resultMap="sharelist">
        select id, user_id, category, title, content, date, hope_area_lat, hope_area_lng, start_day, end_day, nickname, manner,
        (
        CASE
        WHEN a.state >= 0 then 1
        else 0
        END
        ) as state
        from sharing_view as s
        left join
        (
        select
        ANY_VALUE(appointment_id) as  appointment_id,
        ANY_VALUE(board_id) as  board_id,
        ANY_VALUE(share_user_id) as  share_user_id,
        ANY_VALUE(not_share_user_id) as  not_share_user_id,
        ANY_VALUE(appointment_start) as  appointment_start,
        ANY_VALUE(appointment_end) as  appointment_end,
        ANY_VALUE(state) as  state
        from appointment
        WHERE now() >= appointment_start and appointment_end >= now()
        group by board_id
        )
        as a
        on s.id = a.board_id
        <where>
            (CAST(hope_area_lat as Double) >= (#{areaLat} - 0.03) and (#{areaLat} + 0.03) >= CAST(hope_area_lat as Double))
            AND
            (CAST(hope_area_lng as Double) >= (#{areaLng} - 0.03) and (#{areaLng} + 0.03) >= CAST(hope_area_lng as Double))
            <if test ="word != null and word != ''">
                AND (title like #{word} OR content like #{word})
            </if>
        <if test="category != null and category != ''">
            AND category = #{category}
        </if>
    </where>
        LIMIT #{low}
        OFFSET #{high};
    </select>

    <select id="loadMyShareList" parameterType="int" resultMap="sharelist">
        select * from sharing_view where user_id = #{userId};
    </select>

    <select id="detailArticle" parameterType="int" resultMap="share">
        select * from sharing_view where id = #{boardId};
    </select>

    <select id = "getShareBoardList" resultMap="sharelist">
        select id, user_id, category, title, content, date, hope_area_lat, hope_area_lng, start_day, end_day, nickname, manner,
            (
            CASE
            WHEN now() >= a.appointment_start and a.appointment_end >= now() then 1
            else 0
            END
            ) as state

        from sharing_view as s

            left join
            (
            select
            ANY_VALUE(appointment_id) as  appointment_id,
            ANY_VALUE(board_id) as  board_id,
            ANY_VALUE(share_user_id) as  share_user_id,
            ANY_VALUE(not_share_user_id) as  not_share_user_id,
            ANY_VALUE(appointment_start) as  appointment_start,
            ANY_VALUE(appointment_end) as  appointment_end,
            ANY_VALUE(state) as  state
            from appointment
            WHERE now() >= appointment_start and appointment_end >= now()
            group by board_id
            )
            as a
        on s.id = a.board_id;
    </select>

    <update id="delete" parameterType="int">
        UPDATE sharing_board SET state = -1 where id = #{boardId};
    </update>

    <update id="update" parameterType="shareDto">
        UPDATE sharing_board
        SET category =#{category} ,title =#{title},content =#{content},
            hope_area_lat =#{hopeAreaLat},hope_area_lng =#{hopeAreaLng},start_day = #{startDay},end_day=#{endDay}
        WHERE id = #{id};
    </update>

    <insert id="saveFiles" parameterType="imgPath">
        INSERT INTO sharing_board_imgs
        VALUES (#{boardId}, #{path});
    </insert>

    <insert id="insert" parameterType="shareDto" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO sharing_board(user_id, category, title,
                                content, date, hope_area_lat,
                                  hope_area_lng, start_day, end_day, state, address)
        VALUES (#{userId}, #{category}, #{title},
                #{content}, now(), #{hopeAreaLat}, #{hopeAreaLng}, #{startDay}, #{endDay}, 0, #{address});
    </insert>

<!--    <select id="getList" resultMap="sharelist">-->
<!--        SELECT s.id, s.title, s.hope_area_lat, s.hope_area_lng, s.start_day, s.end_day, s.date, i.path-->
<!--        FROM sharing_board as s-->
<!--                 LEFT JOIN (-->
<!--            SELECT *-->
<!--            FROM sharing_board_imgs-->
<!--                     LIMIT 1-->
<!--        ) AS i-->
<!--        ON id = i.board_id;-->
<!--        WHERE s.state != -1-->
<!--    </select>-->
</mapper>